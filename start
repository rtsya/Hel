#!/bin/bash

_get_ziplink () {
    local regex
    regex='(https?)://github.com/.+/.+'
    if [[ $UPSTREAM_REPO == "Telethon-Arab" ]]
    then
        echo "aHR0cHM6Ly9naXRodWIuY29tL3RlbGV0aG9uQXIvVGVsZXRob25BcmFiL2FyY2hpdmUvbWFzdGVyLnppcA==" | base64 -d
    elif [[ $UPSTREAM_REPO == "badcat" ]]
    then
        echo "aHR0cHM6Ly9naXRodWIuY29tL3RlbGV0aG9uQXIvVGVsZXRob25BcmFiL2FyY2hpdmUvbWFzdGVyLnppcA==" | base64 -d
    elif [[ $UPSTREAM_REPO =~ $regex ]]
    then
        if [[ $UPSTREAM_REPO_BRANCH ]]
        then
            echo "${UPSTREAM_REPO}/archive/${UPSTREAM_REPO_BRANCH}.zip"
        else
            echo "${UPSTREAM_REPO}/archive/master.zip"
        fi
    else
        echo "aHR0cHM6Ly9naXRodWIuY29tL3RlbGV0aG9uQXIvVGVsZXRob25BcmFiL2FyY2hpdmUvbWFzdGVyLnppcA==" | base64 -d
    fi
}

_get_repolink () {
    local regex
    local rlink
    regex='(https?)://github.com/.+/.+'
    if [[ $UPSTREAM_REPO == "Telethon-Arab" ]]
    then
        rlink=`echo "aHR0cHM6Ly9naXRodWIuY29tL3RlbGV0aG9uQXIvVGVsZXRob25BcmFi" | base64 -d`
    elif [[ $UPSTREAM_REPO == "badcat" ]]
    then
        rlink=`echo "aHR0cHM6Ly9naXRodWIuY29tL0ppc2FuMDkvY2F0dXNlcmJvdA==" | base64 -d`
    elif [[ $UPSTREAM_REPO =~ $regex ]]
    then
        rlink=`echo "${UPSTREAM_REPO}"`
    else
        rlink=`echo "aHR0cHM6Ly9naXRodWIuY29tL3RlbGV0aG9uQXIvVGVsZXRob25BcmFi" | base64 -d`
    fi
    echo "$rlink"
}


_run_python_code() {
    python3${pVer%.*} -c "$1"
}

_run_catpack_git() {
    $(_run_python_code 'from git import Repo
import sys

OFFICIAL_UPSTREAM_REPO = "https://github.com/linktelethon/Hel"
ACTIVE_BRANCH_NAME = "master"

repo = Repo.init()
origin = repo.create_remote("temponame", OFFICIAL_UPSTREAM_REPO)
origin.fetch()
repo.create_head(ACTIVE_BRANCH_NAME, origin.refs[ACTIVE_BRANCH_NAME])
repo.heads[ACTIVE_BRANCH_NAME].checkout(True) ')
}

_run_cat_git() {
    local repolink=$(_get_repolink)
    $(_run_python_code 'from git import Repo
import sys
OFFICIAL_UPSTREAM_REPO="'$repolink'"
ACTIVE_BRANCH_NAME = "'$UPSTREAM_REPO_BRANCH'" or "master"
repo = Repo.init()
origin = repo.create_remote("temponame", OFFICIAL_UPSTREAM_REPO)
origin.fetch()
repo.create_head(ACTIVE_BRANCH_NAME, origin.refs[ACTIVE_BRANCH_NAME])
repo.heads[ACTIVE_BRANCH_NAME].checkout(True) ')
}

_set_bot () {
    local zippath
    zippath="iqthon.zip"
    echo "  تنزيل الاكواد ..."
    wget -q $(_get_ziplink) -O "$zippath"
    echo "  Unpacking Data ..."
    CATPATH=$(zipinfo -1 "$zippath" | grep -v "/.");
    unzip -qq "$zippath"
    echo "انتهاء"
    echo "  جاري تخزين ..."
    rm -rf "$zippath"
    _run_catpack_git
    cd $CATPATH
    _run_cat_git
    python3 ../setup/updater.py ../requirements.txt requirements.txt
    chmod -R 755 bin
    echo "    بدء تليثون العرب    "
    echo "1"

    echo "2"
    python3 -m userbot
}

_set_bot
